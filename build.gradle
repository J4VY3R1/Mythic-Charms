plugins {
    id "maven-publish"
    id "fabric-loom" version "1.4-SNAPSHOT" apply false

    // https://github.com/ReplayMod/preprocessor
    // https://github.com/Fallen-Breath/preprocessor
    id "com.replaymod.preprocess" version "20c7ec554a"

    // https://github.com/Fallen-Breath/yamlang
    id "me.fallenbreath.yamlang" version "1.3.+" apply false

    // https://github.com/modmuss50/mod-publish-plugin
    id "me.modmuss50.mod-publish-plugin" version "0.4.+"
}

preprocess {
    def mc19 = createNode("1.19.4", 1_19_04, "yarn")
    def mc20 = createNode("1.20.1", 1_20_01, "yarn")
    def mc202 = createNode("1.20.2", 1_20_02, "yarn")

    mc202.link(mc20, null)
        mc20.link(mc19, null)
}

tasks.register("buildAndGather") {
    group "build"
    subprojects {
        dependsOn project.name + ":build"
    }
    doFirst {
        println "Gathering builds"
        delete fileTree(project.projectDir.toPath().resolve("build/libs")) {
            include "*"
        }
        copy {
            subprojects {
                def libDir = project.projectDir.toPath().resolve("build/libs")
                from(libDir) {
                    include "*.jar"
                    exclude "*-dev.jar", "*-sources.jar"
                }
                into "build/libs/"
                duplicatesStrategy DuplicatesStrategy.INCLUDE
            }
        }
    }
}

tasks.register("cleanPreprocessSources") {
    doFirst {
        subprojects {
            def path = project.projectDir.toPath().resolve("build/preprocessed")
            path.toFile().deleteDir()

            def resPath = project.projectDir.toPath().resolve("build/resources")
            resPath.toFile().deleteDir()
        }
    }
}
